// <auto-generated />
using System;
using EgitimYoklamaOtomasyonu.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EgitimYoklamaOtomasyonu.DAL.Migrations
{
    [DbContext(typeof(YoklamaContext))]
    [Migration("20230831171532_editSube")]
    partial class editSube
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.Egitim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<int>("ToplamSure")
                        .HasColumnType("int");

                    b.Property<int>("YaraticiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("YaratilmaZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Egitimler");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotografAdresi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciTipi")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<string>("SoyAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubeID")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YaraticiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("YaratilmaZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SubeID");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.KullaniciGiris", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("KullaniciGirisler");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.Ogrenci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<int>("SinifId")
                        .HasColumnType("int");

                    b.Property<string>("SoyAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YaraticiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("YaratilmaZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SinifId");

                    b.ToTable("Ogrenciler");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.OgrenciYoklama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GunlukKatılımYuzdesi")
                        .HasColumnType("int");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("int");

                    b.Property<int>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("YaraticiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("YaratilmaZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OgrenciId");

                    b.ToTable("OgrenciYoklamalar");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.Sinif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("EgitimId")
                        .HasColumnType("int");

                    b.Property<int>("EgitmenId")
                        .HasColumnType("int");

                    b.Property<int>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<int>("SubeId")
                        .HasColumnType("int");

                    b.Property<int>("YaraticiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("YaratilmaZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EgitimId");

                    b.HasIndex("EgitmenId");

                    b.HasIndex("SubeId");

                    b.ToTable("Siniflar");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.SinifDersGun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gun")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GunlukSaat")
                        .HasColumnType("int");

                    b.Property<int>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<int>("SinifId")
                        .HasColumnType("int");

                    b.Property<int>("YaraticiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("YaratilmaZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SinifId");

                    b.ToTable("SinifDersGunler");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.Sube", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YaraticiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("YaratilmaZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Subeler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adi = "",
                            Adres = "",
                            Mail = "",
                            SilenId = 0,
                            SilindiMi = false,
                            Telefon = "",
                            YaraticiId = 0,
                            YaratilmaZamani = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.Yoklama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DersSaati")
                        .HasColumnType("int");

                    b.Property<bool>("GirdiMi")
                        .HasColumnType("bit");

                    b.Property<int>("OgrenciYoklamaID")
                        .HasColumnType("int");

                    b.Property<int>("SilenId")
                        .HasColumnType("int");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<int>("YaraticiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("YaratilmaZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OgrenciYoklamaID");

                    b.ToTable("Yoklamalar");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.Kullanici", b =>
                {
                    b.HasOne("EgitimYoklamaOtomasyonu.Data.Entities.Sube", "Sube")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("SubeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sube");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.KullaniciGiris", b =>
                {
                    b.HasOne("EgitimYoklamaOtomasyonu.Data.Entities.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.Ogrenci", b =>
                {
                    b.HasOne("EgitimYoklamaOtomasyonu.Data.Entities.Sinif", "Sinif")
                        .WithMany("Ogrenciler")
                        .HasForeignKey("SinifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sinif");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.OgrenciYoklama", b =>
                {
                    b.HasOne("EgitimYoklamaOtomasyonu.Data.Entities.Ogrenci", "Ogrenci")
                        .WithMany()
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.Sinif", b =>
                {
                    b.HasOne("EgitimYoklamaOtomasyonu.Data.Entities.Egitim", "Egitim")
                        .WithMany("Siniflar")
                        .HasForeignKey("EgitimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EgitimYoklamaOtomasyonu.Data.Entities.Kullanici", "Egitmen")
                        .WithMany()
                        .HasForeignKey("EgitmenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EgitimYoklamaOtomasyonu.Data.Entities.Sube", "Sube")
                        .WithMany()
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Egitim");

                    b.Navigation("Egitmen");

                    b.Navigation("Sube");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.SinifDersGun", b =>
                {
                    b.HasOne("EgitimYoklamaOtomasyonu.Data.Entities.Sinif", "Sinif")
                        .WithMany("SinifDersGunler")
                        .HasForeignKey("SinifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sinif");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.Yoklama", b =>
                {
                    b.HasOne("EgitimYoklamaOtomasyonu.Data.Entities.OgrenciYoklama", "OgrenciYoklama")
                        .WithMany("Yoklamalar")
                        .HasForeignKey("OgrenciYoklamaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OgrenciYoklama");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.Egitim", b =>
                {
                    b.Navigation("Siniflar");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.OgrenciYoklama", b =>
                {
                    b.Navigation("Yoklamalar");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.Sinif", b =>
                {
                    b.Navigation("Ogrenciler");

                    b.Navigation("SinifDersGunler");
                });

            modelBuilder.Entity("EgitimYoklamaOtomasyonu.Data.Entities.Sube", b =>
                {
                    b.Navigation("Kullanicilar");
                });
#pragma warning restore 612, 618
        }
    }
}
